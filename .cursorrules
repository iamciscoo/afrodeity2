# Cursor Rules

## Instructions

- Record fixes for mistakes or corrections to avoid repetition in the `Lessons` section.
- Organize thoughts and plan steps before starting a task in the `Scratchpad` section.
- Clear old tasks if necessary.
- Use todo markers for progress tracking:
  - `[X]` Completed tasks
  - `[ ]` Pending tasks
- Update Scratchpad after completing subtasks.
- Reflect and plan after milestones for better task management.
- Always refer to Scratchpad before planning the next step.

## Lessons


## Scratchpad

# E-commerce Website Development Plan

### 1. Project Setup and Configuration ✓
- [X] Initialize Next.js 14 project with TypeScript
- [X] Set up project structure and folders:
  - `/app` - App router
  - `/components` - Reusable components
  - `/lib` - Utility functions
  - `/hooks` - Custom hooks
  - `/types` - TypeScript types/interfaces
  - `/store` - Zustand store
  - `/prisma` - Database schema
  - `/public` - Static assets
- [X] Configure ESLint and Prettier
- [X] Install and configure dependencies:
  - UI: shadcn-ui, lucide-react
  - State: zustand
  - Forms: react-hook-form, zod
  - Email: resend
  - File Upload: uploadthing
  - Database: prisma
  - Auth: next-auth
  - Payment: stripe
  - Charts: recharts

### 2. Database and Authentication Setup ✓
- [X] Set up PostgreSQL database with Neon DB
- [X] Configure Prisma schema:
  - User model
  - Product model
  - Category model
  - Order model
  - Review model
  - Cart model
- [X] Seed initial data:
  - Admin user
  - Categories (T-shirts, Jeans, Shoes)
  - Sample products (2 per category)
- [X] Configure NextAuth.js:
  - Basic setup
  - Credentials provider
  - OAuth providers (GitHub, Google)
  - JWT handling
  - Protected routes

### 3. User Interface Development
- [X] Create Authentication Pages:
  - [X] Login page
  - [X] Register page
  - [X] Forgot password page
  - [X] Reset password page
- [ ] Implement Layouts:
  - [ ] Home Layout:
    - Create `(home)` folder in `app` directory
    - Header with logo, search bar, and navigation
    - Footer with links and social media
- [ ] Homepage:
  - banner carousel
  - latest products
- [ ] Products Catalog:
  - Sidebar with categories and filters
  - Search results
  - Product grid
  - Pagination
- [ ] Product pages:
  - Create product detail page layout
  - Implement image gallery with thumbnails
  - Add product information section:
    - Title, price, description
    - Stock status
    - Add to cart button
  - Reviews and ratings section:
    - Display existing reviews
    - Add review form for authenticated users
    - Star rating component
  - Related products section:
    - Show products from same category
    - Product card carousel
- [ ] Shopping cart:
  - Add/remove items
  - Update quantities
  - Cart persistence
- [ ] Checkout process:
  - Shipping information
  - Payment integration (Stripe)
  - Order confirmation
- [ ] User dashboard:
  - Order history
  - Profile management
  - Saved addresses
  - Wishlist


### 4. Core Features Implementation
- [ ] Shopping Cart:
  - Add/remove items
  - Update quantities
  - Save for later
  - Cart persistence
- [ ] Checkout Process:
  - Shipping information
  - Billing information
  - Order summary
  - Payment integration
- [ ] User Profile:
  - Profile management
  - Order history
  - Address management
  - Wishlist management
- [ ] Product Reviews:
  - Rating system
  - Review submission
  - Review moderation
  - Review display

### 5. Admin Dashboard
- [ ] Dashboard Overview:
  - Sales metrics
  - User statistics
  - Recent orders
  - Low stock alerts
- [ ] Product Management:
  - Add/edit products
  - Manage categories
  - Inventory control
  - Image management
- [ ] Order Management:
  - Order processing
  - Order status updates
  - Refund handling
  - Shipping management
- [ ] User Management:
  - Customer list
  - Admin users
  - Role management
  - User actions

### 6. Advanced Features
- [ ] Search and Filtering:
  - Advanced search
  - Price filtering
  - Category filtering
  - Tag filtering
- [ ] Performance Optimization:
  - Image optimization
  - Code splitting
  - Lazy loading
  - Caching strategies
- [ ] Analytics Integration:
  - Sales tracking
  - User behavior
  - Product performance
  - Marketing metrics
- [ ] Marketing Features:
  - Discount codes
  - Special offers
  - Newsletter signup
  - Social sharing

### 7. Testing and Deployment
- [ ] Testing:
  - Unit tests
  - Integration tests
  - E2E tests
  - Performance testing
- [ ] Security:
  - Input validation
  - XSS protection
  - CSRF protection
  - Rate limiting
- [ ] Documentation:
  - API documentation
  - User guides
  - Admin guides
  - Deployment guides
- [ ] Deployment:
  - Production build
  - Environment setup
  - CI/CD pipeline
  - Monitoring setup

### 8. Post-Launch
- [ ] Monitoring:
  - Error tracking
  - Performance monitoring
  - User analytics
  - Server metrics
- [ ] Maintenance:
  - Regular updates
  - Security patches
  - Database backups
  - Performance optimization
- [ ] Support:
  - User support system
  - Admin training
  - Documentation updates
  - Bug fixes